{
 "cells": [
  {
   "cell_type": "code",
   "id": "initial_id",
   "metadata": {
    "collapsed": true,
    "ExecuteTime": {
     "end_time": "2024-09-23T07:18:32.336957Z",
     "start_time": "2024-09-23T07:18:30.272820Z"
    }
   },
   "source": [
    "from model.BPRMF import *\n",
    "from preprocess.AmazonBook import *\n",
    "from evaluation.BPRMF_evaluation import *\n",
    "from evaluation.LightGCN_SISA import *\n",
    "pd.options.display.max_rows = 10\n",
    "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
    "path = './dataset/amazon-book'\n",
    "dataset = AmazonBook(path)\n",
    "\n",
    "data = dataset.get()\n",
    "num_users, num_books = dataset.getNumber()\n",
    "config = {\n",
    "    'k': 20,\n",
    "    'lr': 0.001,\n",
    "    'epochs': 100,\n",
    "    'num_layers': 2,\n",
    "    'batch_size': 8192,\n",
    "    'embedding_dim': 64,\n",
    "    'num_users': num_users,\n",
    "    'num_books': num_books,\n",
    "    'tuning_type': None,\n",
    "}\n",
    "model = BPRMF(\n",
    "    num_users= config['num_users'],\n",
    "    num_items= config['num_books'],\n",
    "    embedding_dim = config['embedding_dim']\n",
    ").to(device)"
   ],
   "outputs": [],
   "execution_count": 1
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "# Split the dataset",
   "id": "fc69047f9f665b92"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-09-23T07:18:33.615827Z",
     "start_time": "2024-09-23T07:18:33.555843Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Basic setting\n",
    "num_edges = data.edge_index.size(1)\n",
    "perm = torch.randperm(num_edges)\n",
    "split = int(num_edges * 0.1)  # 10% of edges will be retained\n",
    "\n",
    "# Define the data for forget and retain dataset\n",
    "forget_data = Data()\n",
    "retain_data = Data()\n",
    "\n",
    "forget_data.num_nodes = data.num_nodes\n",
    "retain_data.num_nodes = data.num_nodes\n",
    "forget_data.edge_index = data.edge_index[:, perm[:split]]\n",
    "retain_data.edge_index = data.edge_index[:, perm[split:]]\n",
    "forget_data.edge_label_index = data.edge_label_index\n",
    "retain_data.edge_label_index = data.edge_label_index"
   ],
   "id": "dc245ca974675261",
   "outputs": [],
   "execution_count": 2
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "# Retain BPRMF model",
   "id": "f364bfd671d52171"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "config['epochs'] = 1000\n",
    "retrain_lightgcn = BPRMF(\n",
    "    num_users= config['num_users'],\n",
    "    num_items= config['num_books'],\n",
    "    embedding_dim = config['embedding_dim']\n",
    ").to(device)\n",
    "retrain_lightgcn, epoch_tracks, test_topks = BPRMF_eva(retrain_lightgcn, config, retain_data, device)"
   ],
   "id": "d58c2b953c921947"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "# Test on the forget data\n",
    "BPRMF_forget_data_eva(retrain_lightgcn, None, forget_data, config['num_users'], config['k'], config['batch_size'], device)"
   ],
   "id": "a885656fc2eb338d"
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "# Prompt Unlearning\n",
    "## Case 1: Without Contrastive Loss and Regularization"
   ],
   "id": "90f4a122a147a957"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-09-23T07:18:38.132388Z",
     "start_time": "2024-09-23T07:18:37.357027Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Define the model\n",
    "teacher = BPRMF(\n",
    "    num_users= config['num_users'],\n",
    "    num_items= config['num_books'],\n",
    "    embedding_dim = config['embedding_dim']\n",
    ").to(device)\n",
    "student = BPRMF(\n",
    "    num_users= config['num_users'],\n",
    "    num_items= config['num_books'],\n",
    "    embedding_dim = config['embedding_dim']\n",
    ").to(device)\n",
    "\n",
    "# Load the model\n",
    "teacher.load_state_dict(torch.load(f\"BPRMF_Amazon_Book_{config['epochs']}_Epochs_Top_{config['k']}.pt\"))\n",
    "student.load_state_dict(torch.load(f\"BPRMF_Amazon_Book_{config['epochs']}_Epochs_Top_{config['k']}.pt\"))"
   ],
   "id": "31b8ec0436dc6bd2",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<All keys matched successfully>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 3
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-09-23T07:32:11.453882Z",
     "start_time": "2024-09-23T07:25:56.216473Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Setting the basic hyperparameters\n",
    "config['beta'] = 0.6\n",
    "config['alpha'] = 0.4\n",
    "config['epochs'] = 50\n",
    "config['gamma'] = 1e-6 # contrastive loss\n",
    "config['delta'] = 1e-2 # regularization loss\n",
    "config['tuning_type'] = 'gpf'\n",
    "config['weight_decay'] = 0.001\n",
    "config['regularization'] = True\n",
    "config['Contrastive_loss'] = True\n",
    "student, prompt, epoch_tracks, test_topks = prompt_BPRMF_unlearning_eva(teacher, student, retain_data, forget_data, config, device)"
   ],
   "id": "27fb146638217915",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch: 001, Loss: 0.7665, HR@20: 0.0102, Recall@20: 0.0240\n",
      "Epoch: 002, Loss: 0.7041, HR@20: 0.0102, Recall@20: 0.0240\n",
      "Epoch: 003, Loss: 0.6782, HR@20: 0.0102, Recall@20: 0.0240\n",
      "Epoch: 004, Loss: 0.6465, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 005, Loss: 0.6376, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 006, Loss: 0.6317, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 007, Loss: 0.6095, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 008, Loss: 0.5934, HR@20: 0.0102, Recall@20: 0.0240\n",
      "Epoch: 009, Loss: 0.5919, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 010, Loss: 0.5790, HR@20: 0.0102, Recall@20: 0.0240\n",
      "Epoch: 011, Loss: 0.5772, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 012, Loss: 0.5702, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 013, Loss: 0.5645, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 014, Loss: 0.5698, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 015, Loss: 0.5630, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 016, Loss: 0.5341, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 017, Loss: 0.5358, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 018, Loss: 0.5382, HR@20: 0.0102, Recall@20: 0.0242\n",
      "Epoch: 019, Loss: 0.5291, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 020, Loss: 0.5165, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 021, Loss: 0.5237, HR@20: 0.0102, Recall@20: 0.0241\n",
      "Epoch: 022, Loss: 0.5296, HR@20: 0.0103, Recall@20: 0.0241\n",
      "Epoch: 023, Loss: 0.5152, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 024, Loss: 0.5046, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 025, Loss: 0.5000, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 026, Loss: 0.5025, HR@20: 0.0103, Recall@20: 0.0241\n",
      "Epoch: 027, Loss: 0.5176, HR@20: 0.0103, Recall@20: 0.0241\n",
      "Epoch: 028, Loss: 0.4937, HR@20: 0.0103, Recall@20: 0.0241\n",
      "Epoch: 029, Loss: 0.4724, HR@20: 0.0103, Recall@20: 0.0241\n",
      "Epoch: 030, Loss: 0.4762, HR@20: 0.0103, Recall@20: 0.0241\n",
      "Epoch: 031, Loss: 0.4849, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 032, Loss: 0.4689, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 033, Loss: 0.4943, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 034, Loss: 0.4751, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 035, Loss: 0.4765, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 036, Loss: 0.4769, HR@20: 0.0103, Recall@20: 0.0243\n",
      "Epoch: 037, Loss: 0.4805, HR@20: 0.0103, Recall@20: 0.0243\n",
      "Epoch: 038, Loss: 0.4665, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 039, Loss: 0.4609, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 040, Loss: 0.4672, HR@20: 0.0103, Recall@20: 0.0242\n",
      "Epoch: 041, Loss: 0.4425, HR@20: 0.0103, Recall@20: 0.0243\n",
      "Epoch: 042, Loss: 0.4614, HR@20: 0.0103, Recall@20: 0.0243\n",
      "Epoch: 043, Loss: 0.4779, HR@20: 0.0103, Recall@20: 0.0243\n",
      "Epoch: 044, Loss: 0.4645, HR@20: 0.0104, Recall@20: 0.0243\n",
      "Epoch: 045, Loss: 0.4442, HR@20: 0.0103, Recall@20: 0.0243\n",
      "Epoch: 046, Loss: 0.4540, HR@20: 0.0104, Recall@20: 0.0243\n",
      "Epoch: 047, Loss: 0.4496, HR@20: 0.0104, Recall@20: 0.0243\n",
      "Epoch: 048, Loss: 0.4723, HR@20: 0.0104, Recall@20: 0.0243\n",
      "Epoch: 049, Loss: 0.4326, HR@20: 0.0104, Recall@20: 0.0243\n",
      "Epoch: 050, Loss: 0.4321, HR@20: 0.0103, Recall@20: 0.0243\n",
      "Running time: 375.2062\n"
     ]
    }
   ],
   "execution_count": 12
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-09-23T07:32:17.608518Z",
     "start_time": "2024-09-23T07:32:11.453882Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Test on the forget data\n",
    "BPRMF_forget_data_eva(student, prompt, forget_data, config['num_users'], config['k'], config['batch_size'], device)"
   ],
   "id": "62cc789ddf1a1d17",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HR@20: 0.0256, Recall@20: 0.1488\n"
     ]
    }
   ],
   "execution_count": 13
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "## Case 2: Without Contrastive Loss but with Regularization",
   "id": "4057eb0aa2d643f"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "# Setting the basic hyperparameters\n",
    "config['contrastive_loss'] = False\n",
    "config['regularization'] = True\n",
    "\n",
    "student, prompt, epoch_tracks, test_topks = prompt_BPRMF_unlearning_eva(teacher, student, config, retain_data, forget_data, device)"
   ],
   "id": "e2917159e7dae82"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": "BPRMF_forget_data_eva(student, prompt, forget_data, num_users, config['k'], config['batch_size'], device)",
   "id": "a995dc062fa9eb1c"
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "## Case 3: With Contrastive Loss but without Regularization",
   "id": "d90ffd5b7f70c99a"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "# Setting the basic hyperparameters\n",
    "config['contrastive_loss'] = True\n",
    "config['regularization'] = False\n",
    "\n",
    "student, prompt, epoch_tracks, test_topks = prompt_BPRMF_unlearning_eva(teacher, student, config, retain_data, forget_data, device)"
   ],
   "id": "8482ee5ed967634e"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": "BPRMF_forget_data_eva(student, prompt, forget_data, num_users, config['k'], config['batch_size'], device)",
   "id": "5fd711181c32f708"
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "## Case 4: With Contrastive Loss and Regularization",
   "id": "26a0f96e24f564fd"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "# Setting the basic hyperparameters\n",
    "config['contrastive_loss'] = True\n",
    "config['regularization'] = True\n",
    "\n",
    "student, prompt, epoch_tracks, test_topks = prompt_BPRMF_unlearning_eva(teacher, student, config, retain_data, forget_data, device)"
   ],
   "id": "d90f1f91f4582069"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": "BPRMF_forget_data_eva(student, prompt, forget_data, num_users, config['k'], config['batch_size'], device)",
   "id": "28d6d0d22202f27b"
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "# Additional Materials(Multiple Prompts)",
   "id": "3e899dea0696e0ea"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "config['tuning_type'] = 'gpf-plus'\n",
    "config[\"number_p\"] = 10 # The number of prompts\n",
    "# Setting the basic hyperparameters\n",
    "config['contrastive_loss'] = True\n",
    "config['regularization'] = True\n",
    "\n",
    "student, prompt, epoch_tracks, test_topks = prompt_BPRMF_unlearning_eva(teacher, student, config, retain_data, forget_data, device)"
   ],
   "id": "fdbb833bbb42a180"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": "BPRMF_forget_data_eva(student, prompt, forget_data, num_users, config['k'], config['batch_size'], device)",
   "id": "6456adf8223bd47d"
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
